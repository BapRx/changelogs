---
name: Build and Deploy changelogs to Github Pages

on:
  push:
  schedule:
    - cron: "*/30 * * * *"

env:
  HELM_CHANGELOG_VERSION: 0.0.1

jobs:
  build_and_deploy:
    name: Build and deploy site
    runs-on: ubuntu-22.04
    # Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
    permissions:
      contents: write
      id-token: write
    steps:
      - name: Checkout BapRx/changelogs
        uses: actions/checkout@v3
        with:
          path: changelogs
          submodules: recursive

      - name: Check if there are new commits since last Github Action job
        id: check-last-commit-date
        run: |
          # Skip run if no new commit since last Github Action job
          now=$(date +%s)
          lastcommit=$(git log -1 --format=%ct)
          delta=$((now - lastcommit))
          # 1800 -> 30 min
          [[ "$delta" -ge "1800" ]] && echo "updated=false" >> $GITHUB_OUTPUT || exit 0
        shell: bash
        working-directory: ${{ env.REPOSITORY }}

      - name: Generate Changelogs for ${{ env.REPOSITORY }}
        run: |
          # Download release ${HELM_CHANGELOG_VERSION} of helm-changelog
          tmpdir=$(mktemp -d)
          curl -fLsC - -o "$tmpdir/helm-changelog.tar.gz" "https://github.com/mogensen/helm-changelog/releases/download/v${HELM_CHANGELOG_VERSION}/helm-changelog_${HELM_CHANGELOG_VERSION}_linux_amd64.tar.gz"
          tar zxvf "$tmpdir/helm-changelog.tar.gz" -C /usr/local/bin/ helm-changelog

          # Delete pre-existing changelogs
          find . -type f -name Changelog.md -delete

          # Generate new changelogs
          git submodule foreach helm-changelog

          # Process and move Changelog.md files to a specific directory
          find . -type f -name Changelog.md -not -empty | while read line; do
            directory_name=$(dirname $line)
            chart_name=$(basename $directory_name)
            repository=$(echo $directory_name | cut -d/ -f 2-3)
            if [ ! -d "${GITHUB_WORKSPACE}/changelogs/_changelogs/${repository//\//_}/" ]; then
                mkdir "${GITHUB_WORKSPACE}/changelogs/_changelogs/${repository//\//_}/"
                echo -e "---\nhas_children: true\nlayout: default\npermalink: /${repository}\ntitle: ${repository}\n---\n\n# ${repository}" >"${GITHUB_WORKSPACE}/changelogs/_changelogs/${repository//\//_}/index.md"
            fi
            sed -i '1i---\nlayout: default\nparent: '${repository}'\npermalink: /'${repository}'/'${chart_name}'\nrender_with_liquid: false\ntitle: '${chart_name}'\n---\n' $line
            sed -i "s/^# Change Log$/# ${chart_name}/" $line
            mv $line "${GITHUB_WORKSPACE}/changelogs/_changelogs/${repository//\//_}/${chart_name}.md"
          done
        shell: bash
        working-directory: repositories
        if: ${{ steps.check-last-commit-date.outputs.updated != 'false' }}

      - uses: actions/cache@v3
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile') }}
          restore-keys: |
            ${{ runner.os }}-gems-
        if: ${{ steps.check-last-commit-date.outputs.updated != 'false' }}

      - name: Build Jekyll for GitHub Pages
        uses: jeffreytse/jekyll-deploy-action@v0.4.0
        with:
          jekyll_src: changelogs
          token: ${{ secrets.GITHUB_TOKEN }}
        if: ${{ steps.check-last-commit-date.outputs.updated != 'false' }}
